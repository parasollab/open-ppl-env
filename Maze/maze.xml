<?xml version='1.0' encoding='UTF-8'?>
<MotionPlanning warnings="true" warningsAsErrors="true" print="false">

  <!-- Here we specify input files, such as environment and query. The
       'baseFilename in the Problem node is for Simulator stat output only. -->
  <Problem baseFilename="example">

    <Environment filename="maze.env"
      frictionCoefficient="0" gravity="0 0 0"/>

    <Robot label="robot" filename="maze.robot">
      <!--
      <Agent type="planning"/>
      -->
      <Agent type="pathfollowing" waypointDm="euclideanPosition"
        waypointThreshold=".05"/>
    </Robot>

    <Task label="query" robot="robot">
      <StartConstraints>
        <!-- WARNING Support for multiple constraints is not yet implemented! -->
        <CSpaceConstraint point="0  34"/>
      </StartConstraints>

      <GoalConstraints>
        <!-- Here multiple constraints indicates a compound goal. Each constraint
             represents a single intermediate goal. -->
        <CSpaceConstraint point="0 -34 "/>
      </GoalConstraints>
    </Task>

  </Problem>

  <!-- Set available algorithms and parameters. -->
  <Library>

    <DistanceMetrics>
      <Euclidean label="euclidean"/>
      <Manhattan label="manhattan"/>
      <Minkowski label="minkowski" r1="3.0" r2="3.0" r3="0.333"
        normalize="false"/>
    </DistanceMetrics>

    <ValidityCheckers>
      <CollisionDetection label="rapid" method="RAPID"/>
      <CollisionDetection label="pqp" method="PQP"/>
      <CollisionDetection label="pqp_solid" method="PQP_SOLID"/>
      <CollisionDetection label="bounding_spheres" method="BoundingSpheres"/>
      <CollisionDetection label="inside_spheres" method="InsideSpheres"/>
      <AlwaysTrueValidity label="alwaysTrue"/>
    </ValidityCheckers>

    <NeighborhoodFinders>
      <BruteForceNF label="BFNF" dmLabel="euclidean" unconnected="false" k="4"/>
      <BruteForceNF label="Nearest" dmLabel="euclidean" unconnected="false"
        k="1"/>
      <BruteForceNF label="BFNFAll" dmLabel="euclidean" k="0"/>
      <RadiusNF label="RNF" dmLabel="euclidean" radius="8"/>
    </NeighborhoodFinders>

    <Samplers>
      <UniformRandomSampler label="UniformRandom" vcLabel="alwaysTrue"/>
      <UniformRandomSampler label="UniformRandomFree" vcLabel="pqp_solid"/>
      <ObstacleBasedSampler label="ObstacleBased" vcLabel="rapid" useBBX="false"
        pointSelection="cspace" dmLabel="euclidean" stepSize="0.0"
        nShellsColl="0" nShellsFree="10" debug="false"/>

      <MixSampler label="MixOBUniform">
        <Sampler label="UniformRandomFree" p="0.1"/>
        <Sampler label="ObstacleBased" p="0.9"/>
      </MixSampler>
    </Samplers>

    <LocalPlanners>
      <StraightLine label="sl" binaryEvaluation="true" vcLabel="rapid"/>
      <StraightLine label="slAlwaysTrue" binaryEvaluation="true"
        vcLabel="alwaysTrue"/>
    </LocalPlanners>

    <Extenders>
      <BasicExtender label="BERO" debug="false" dmLabel="euclidean"
        vcLabel="rapid" maxDist="4." minDist=".01"/>
      <BasicExtender label="BESO" debug="false" dmLabel="euclidean"
        vcLabel="rapid" maxDist="10." minDist=".001" randomOrientation="false"/>
    </Extenders>

    <PathModifiers>
    </PathModifiers>

    <Connectors>
      <NeighborhoodConnector label="Closest" debug="true"
        nfLabel="BFNF" lpLabel="sl" checkIfSameCC="false"/>
      <NeighborhoodConnector label="ToggleConnect" nfLabel="BFNF" lpLabel="sl"
        maxFailures="1" checkIfSameCC="false"/>
      <NeighborhoodConnector label="ClosestAlwaysTrue" nfLabel="RNF"
        lpLabel="slAlwaysTrue" checkIfSameCC="false"/>
      <NeighborhoodConnector label="AllToAll" nfLabel="BFNFAll" lpLabel="sl"
        checkIfSameCC="false"/>
      <CCsConnector label="CCs" debug="false"
        nfLabel="BFNF" lpLabel="sl" checkIfSameCC="false"/>
      <RewireConnector label="Rewire" nfLabel="OptimalK" lpLabel="sl"/>
    </Connectors>

    <Metrics>
      <NumNodesMetric label="NumNodes"/>
      <NumEdgesMetric label="NumEdges"/>
      <TimeMetric label="TimeInSec"/>
    </Metrics>

    <MapEvaluators>
      <QueryMethod label="Query" debug="false"
        graphSearchAlg="dijkstras" safeIntervalToolLabel="SI"/>

      <LazyQuery label="LazyQuery" debug="true"
        vcLabel="pqp_solid" lpLabel="sl" enhanceDmLabel="euclidean"
        numEnhance="10" d="0.5" deleteInvalid="true">
        <NodeConnectionMethod label="ClosestAlwaysTrue"/>
        <Resolution mult="27"/>
        <Resolution mult="16"/>
        <Resolution mult="1"/>
      </LazyQuery>

      <PrintMapEvaluation label="PrintMap" base_name="Basic"/>

      <ConditionalEvaluator label="NodesEval" metric_method="NumNodes"
        value="50" operator=">="/>

      <ConditionalEvaluator label="EdgesEval" metric_method="NumEdges"
        value="1000" operator=">"/>

      <ConditionalEvaluator label="FreqNodeEval" metric_method="NumNodes"
        value="50" operator="%"/>

      <ComposeEvaluator label="BoundedQuery" operator="or">
        <Evaluator label="NodesEval"/>
        <Evaluator label="Query"/>
      </ComposeEvaluator>

      <ComposeEvaluator label="MinimumLazyQuery" operator="and">
        <Evaluator label="LazyQuery"/>
        <Evaluator label="NodesEval"/>
      </ComposeEvaluator>

      <TimeEvaluator label="TimeEval" timeout="10"/>
    </MapEvaluators>

    <MPStrategies>
      <!-- Basic PRM where num samples is based on Number -->
      <BasicPRM label="OBPRM" debug="true" querySampler="UniformRandomFree">
        <Sampler label="MixOBUniform" number="10" attempts="10"/>
        <Connector label="CCs"/>
        <Evaluator label="Query"/>
      </BasicPRM>

      <BasicPRM label="BasicPRM" debug="true" querySampler="UniformRandomFree">
        <Sampler label="UniformRandomFree" number="25" attempts="1"/>
        <Connector label="Closest"/>
        <Evaluator label="Query"/>
      </BasicPRM>

      <!-- LazyPRM -->
      <BasicPRM label="LazyPRM" debug="true">
        <Sampler label="UniformRandom" number="1" attempts="1"/>
        <Connector label="ClosestAlwaysTrue"/>
        <Evaluator label="LazyQuery"/>
      </BasicPRM>

      <!-- Basic RRT -->
      <BasicRRTStrategy label="RRT" debug="true"
        querySampler="UniformRandomFree" samplerLabel="UniformRandom"
        nfLabel="Nearest" extenderLabel="BERO"
        growGoals="false" growthFocus="0.01" m="1"
        goalDmLabel="euclidean" goalThreshold="5">
        <Evaluator label="Query"/>
      </BasicRRTStrategy>

    </MPStrategies>

    <MPTools>

      <ReebGraphConstruction debug="false" write="false" filename=""/>

      <SafeIntervalTool label="SI" vcLabel="rapid"/>

    </MPTools>

    <!-- MPProblem allows multiple solvers to be specified and executed. -->

    <Solver mpStrategyLabel="OBPRM" seed="12345678"
      baseFilename="example" vizmoDebug="true"/>

  </Library>

  <TMPLibrary>
    <TMPStrategies>
    </TMPStrategies>

    <TaskEvaluators>
      <SimpleMotionEvaluator label="motionEval" />
    </TaskEvaluators>

    <Solver tmpStrategyLabel="SimpleMotion" baseFilename="tmp_examples" />
  </TMPLibrary>

</MotionPlanning>
